const int PI=3,_tan=90;
const char hello='h';
char ca0,cb[10];
int t;

int gcd(int a,int b)
{
	if (b==0) 
		return(a);
	if (a<b) 
		return(gcd(b,a));
	else 
		return(gcd(a-b, b));
}

void trans()
{
	const int sum = 1;
	t = -t + sum;
}

void printf_test()
{
	int a;
	char ch;
	int t[5];
	a = 1;
	printf("printf_test:start");
	printf("a,next line the same print:",a);
	printf(a);
	ch = 't';
	printf("ch,next line the same print:",ch);
	printf(ch);
	a = a+1;
	printf("a+1:",a);
	t[0] = 1;
	printf("t[0]:",t[0]);
	printf("printf_test:finished");
}

void scanf_test()
{
	int a;
	char ch;
	int t[5];
	printf("scanf_test:start");
	scanf(a);
	printf("a:",a);
	scanf(ch);
	printf("ch:",ch);
	scanf(a,ch);
	printf("a:",a);
	printf("ch:",ch);
	t[0] = 2;
	printf("t[0]:",t[0]);
	printf("scanf_test:finished");
}

void same_name_test()
{
	const char _tan = 'y';
	printf("same_name_test:start");
	printf("_tan local:",_tan);
	printf("same_name_test:finished");
}

void expression_test()
{
	int a,b,c;
	int t[5];
	printf("expression_test:start");
	a = 5;
	b = 3;
	c = -7;
	t[0] = 3;
	printf("a = 5, b = 3, c = -7 , t[0] = 3");
	printf("+a:",+a);
	printf("-c:",-c);
	printf("+a+b:",+a+b);
	printf("+a+b*c:",+a+b*c);
	printf("+a+b*(c+gcd(5,3)):",+a+b*(c+gcd(5,3)));
	printf("+a+b*(c+gcd(5,3)*t[0]):",+a+b*(c+gcd(5,3)*t[0]));
	printf("'c':",'c');
	printf("'c'+-1:",'c'+-1);
	printf("5 - 1 * 2 * 3 + 12 / 2 / 2:",5 - 1 * 2 * 3 + 12 / 2 / 2);
	printf("-'c'*(152+56/(3-2))/2+7:",-'c'*(152+56/(3-2))/2+7);
	printf("expression_test:finished");
}

void fun0()
{
	printf("fun0 passed");
}

void fun1(char a)
{
	printf("fun1 passed,with para:",a);
}

char fun2()
{
	printf("fun2 passed,with return:",'a');
	return('a');
}

int fun3(int a)
{
	printf("fun3 passed,with return:",a+1);
	a = a + 1;
	return(a);
}

int fun4(int a,int b)
{
	printf("fun4 passed,with return:",a+b);
	return(a+b);
}

void function_test()
{
	int a;
	int b;int c;
	printf("function_test:start");
	fun0();
	fun1('t');
	a = fun2();
	
	b = fun3((a+0));
	
	c = fun4(a,b);
	printf("a==1:",a);
	printf("b==2:",b);
	printf("c==3:",c);
	printf("function_test:finished");
}

void if_test()
{
	int a;
	printf("if_test:start");
	if (1)
		printf("if_test1 passed");
	if (0)
		printf("if_test2 error");
	else
		printf("if_test2 passed");
	a = 1;
	if (a)
		printf("if_test3 passed");
	if (a+1)
		printf("if_test4 passed");
	if (1)
		if (0)
			printf("if_test5 error");
		else
			printf("if_test5 passed");
	printf("if_test:finished");
}

void for_test()
{
int a,i,j;
	printf("for_test:start");
	
	a=0;
	for (i=0;i<0;i=i+1)
		a = a+1;
	printf("for_test1 passed:",a);
	a=0;
	for (i=0;0+2-2;i=i+1)
		a = a+1;
	printf("for_test2 passed:",a);
	a=0;
	for (i=0;i<10;i=i+1)
	{
		a = a+1;
	}
	printf("for_test3 passed:",a);
	a=0;
	for (i=0;i<5;i=i+1)
		for (j=3;j>0;j=j-1)
			a = a + 1;
	printf("for_test4 passed:",a);
	printf("for_test:finished");
}

void switch_test()
{
	int c;
	printf("switch_test:start");
	c=4;
	switch(c)
		{
			case 0: printf(0);
			case 1: printf(1);
			case 2: printf(2);
			case 3: printf(3);
			case 4: printf(4);
			case 5: printf(5);
			case 6: printf(6);
			default:printf("greater than 6");
		}
	printf("switch_test:finished");
}

void nested_test()
{
	int num;
	int i;
	printf("nested_test:start");
	
	for (num=-1;num<5;num=num+1)
		switch(num)
			{
				case -1: printf(-1);
				case 0: printf(0);
				case 1: for (i=0;i<2;i=i+1) printf(1);
				case 2: if (1) printf(2);
				case +3: {printf(3);;;}
				default:printf("greater than 3");
			}
	printf("nested_test:finished");
}

void array_test()
{
	int a[5];
	int i;
	char ch[2];
	printf("array_test:start");
	for (i=0;i<5;i=i+1)
	{
		a[i] = i;
		printf("a[i]:",a[i]);
	}
	ch[0] = 'a';
	printf("ch[0]:",ch[0]);
	ch[1] = 98;
	printf("ch[1]:",ch[1]);
	printf("array_test:finished");
}

void empty_test()
{
	printf("empty_test:start");
	{};;{{;;}};;{;}
	printf("empty_test:finished");
}

void assign_test()
{
	int a;
	int _t0[5];
	printf("assign_test:start");
	a = 1;
	printf("a:",a);
	_t0[0] = a+1;
	printf("_t0[0]:",_t0[0]);
	a = _t0[0]+1;
	printf("a:",a);
	printf("assign_test:finished");
}

void gcd_test(int a, int b)
{
	int t;
	int c;
	printf("gcd_test:start");
	c = gcd(a,b);
	t = +a*b/c;
	printf("gcd is:",c);
	printf("lcm is:",t);
	printf("gcd_test:finished");
}

void main()
{
	printf_test();
	scanf_test();
	same_name_test();
	expression_test();
	function_test();
	if_test();
	for_test();
	switch_test();
	nested_test();
	array_test();
	empty_test();
	assign_test();
	gcd_test(30,75);
}
