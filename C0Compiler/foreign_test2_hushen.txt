const int uplmt=9,lowlmt=2;
const char layer='0';

int lmt,pace,sum[1024],point;
char custom;

int Read(int trash1,int trash2)
{
    if(lmt<lowlmt)return (1);
    else if(lmt>uplmt)return (2);
    else if (pace<=0)return (3);
    else
    {
        return (0);
    }
}

void square(int x)
{   const int trash0=0,_trash1=+1;
    const char _trash2='2',trash3='3';

    int trash_ary[3];
    char _trash_ch1[2],trash_ch2;

    point=point+1;
    sum[point]=x*x;

}

char trash_func()
{
	return ('_');
}

int Count(char layer)
{   char ch;

    square(layer-'0'+1);
    ch=(layer-'0')/pace+'1';
    printf("Layer ",ch);
    printf(" : ",sum[point]);

    if(-(-(lmt-(layer-'0')-pace+(255-138)*lowlmt/(3-1*1)-118))>=0)
    {   return (sum[point]+Count(layer+pace));
    }
    else return (1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(1-(sum[point])))))))))))))))))))))))))))))));
}
void main()
{   int flag,i,j,trashpara;

    printf("Enter your custom chart-making symbol: ");
    scanf(custom);
    printf("Enter the lmt and the pace: ");
    scanf(lmt,pace);

    flag=Read(trashpara+10086,233333);

    for(i=0;i!=25;i=i+1)printf(custom);

    printf("BEGIN");
    for(i=0;i<=4;i=i+1)
        for(j=20;j>=0;j=j-5)printf(custom);

    switch(flag)
    {
        case 1 : printf("Too small lmt value. The lower_bound is ",lowlmt);
        case 2 : {printf("Too large lmt value. The upper_bound is ",uplmt);}
        case 3 : printf("Illegal pace value. The pace must be a positive integer.");
        default :
        {
            printf("Result : ",Count(layer));
            {
                {
                    {
                        ;
                    }
                }
            }
        }
    }

    for(i=0;i!=26;i=i+1)printf(custom);
    printf("END");
    for(i=0;i<=1;i=i+1)
        for(j=13;j;j=j-1)printf(custom);

    return;
}