int global_array[10];

void quick_sort(int array_head,int array_end)
{
    int i,j;
    int temp,flag;
    i = 0;
    j = 0;

    if (array_head >= array_end) {
        return ;
    }
    flag = 0;
    for (j = array_end;flag == 0;j = j - 1)
    {
        if (global_array[j] < global_array[array_head])
            flag = 1;
        if (j <= array_head)
            flag = 1;
    }
    j = j + 1;
    for(i = array_head + 1; i <= j; i = i +1)
    {
        if (global_array[i] > global_array[array_head])
        {
            temp = global_array[i];
            global_array[i] = global_array[j];
            global_array[j] = temp;
            flag = 0;
            for (j = array_end;flag == 0;j = j - 1)
            {
                if (global_array[j] < global_array[array_head])
                    flag = 1;
                if (j <= array_head)
                    flag = 1;
            }
            j = j + 1;
        }
    }
    temp = global_array[array_head];
    global_array[array_head] = global_array[j];
    global_array[j] = temp;
	printf(array_head, j - 1);
	printf(j + 1, array_end);
    quick_sort(array_head,j - 1);
    quick_sort(j + 1, array_end);
}

void main() {
	int i;
	global_array[0] = 6;
	global_array[1] = 5;
	global_array[2] = 4;
	global_array[3] = 3;
	global_array[4] = 2;
	global_array[5] = 1;
	global_array[6] = 6;
	global_array[7] = 5;
	global_array[8] = 4;
	global_array[9] = 3;

	quick_sort(0, 9);

	for(i = 0;i < 10; i = i + 1)
    {
       printf(global_array[i]);
       printf(" ");
    }
}